<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="Hotel_Review">
	<resultMap type="Review" id="ReviewResult">
		<result column="reviewCode" property="reviewCode" />
		<result column="guestId" property="guestId" />
		<result column="guestName" property="guestName" />
		<result column="reserveCode" property="reserveCode" />
		<result column="hotelCode" property="hotelCode" />
		<result column="roomName" property="roomName" />
		<result column="reviewTitle" property="reviewTitle" />
		<result column="reviewContent" property="reviewContent" />
		<result column="reviewFile" property="reviewFile" />
		<result column="reviewDate" property="reviewDate" />
		<result column="reviewIp" property="reviewIp" />
		<result column="reviewScore" property="reviewScore" />
		<result column="commentCnt" property="commentCnt" />
	</resultMap>
	
	<!-- 리뷰 개수 조회 쿼리 -->
	<select id="reviewCnt" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM HOTEL_REVIEW REVIEW, GUEST WHERE REVIEW.GUESTID=GUEST.GUESTID AND HOTELCODE=#{hotelCode}
	</select>
	
	<!-- 리뷰 목록 조회 쿼리 -->
	<select id="reviewList" parameterType="Review" resultMap="ReviewResult">
		SELECT * FROM (SELECT ROWNUM AS RN, ALLIAS.* FROM (
		SELECT REVIEW.*, GUESTNAME, (SELECT ROOMNAME FROM ROOM WHERE ROOM.ROOMCODE=(SELECT ROOMCODE FROM RESERVATION WHERE RESERVATION.RESERVECODE=REVIEW.RESERVECODE)) AS ROOMNAME,
		(SELECT COUNT(*) FROM REVIEW_COMMENT WHERE REVIEWCODE=REVIEW.REVIEWCODE) AS COMMENTCNT 
		FROM HOTEL_REVIEW REVIEW, GUEST WHERE REVIEW.GUESTID=GUEST.GUESTID AND HOTELCODE=#{hotelCode} ORDER BY REVIEWCODE DESC
		) ALLIAS) WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 리뷰 작성 쿼리(리뷰는 답글 없음) -->
	<insert id="writeReview" parameterType="Review">
		INSERT INTO HOTEL_REVIEW (REVIEWCODE, GUESTID, RESERVECODE, HOTELCODE, REVIEWTITLE, REVIEWCONTENT, REVIEWFILE, REVIEWDATE, REVIEWIP, REVIEWSCORE) 
		VALUES (HOTEL_REVIEW_SEQ.NEXTVAL, #{guestId}, #{reserveCode}, #{hotelCode}, #{reviewTitle}, #{reviewContent}, #{reviewFile}, SYSDATE, #{reviewIp}, #{reviewScore})
	</insert>
	
	<!-- 호텔 총평점 계산하는 쿼리 -->
	<update id="updateHotelScore" parameterType="String">
		UPDATE HOTEL SET HOTELSCORE=(SELECT SUM(REVIEWSCORE)/COUNT(REVIEWSCORE) FROM HOTEL_REVIEW WHERE HOTELCODE=#{hotelCode}) WHERE HOTELCODE=#{hotelCode}
	</update>
	
	<!-- 리뷰 하나 가져오는 쿼리 -->
	<select id="getOneReview" parameterType="int" resultType="Review">
		SELECT REVIEW.*, GUESTNAME, (SELECT ROOMNAME FROM ROOM WHERE ROOM.ROOMCODE=(SELECT ROOMCODE FROM RESERVATION WHERE RESERVATION.RESERVECODE=REVIEW.RESERVECODE)) AS ROOMNAME,
		(SELECT COUNT(*) FROM REVIEW_COMMENT WHERE REVIEWCODE=1) AS COMMENTCNT
		FROM HOTEL_REVIEW REVIEW, GUEST WHERE REVIEW.GUESTID=GUEST.GUESTID AND REVIEWCODE=#{reviewCode}
	</select>
	
	<!-- 리뷰 수정하는 쿼리 -->
	<update id="modifyReview" parameterType="Review">
		UPDATE HOTEL_REVIEW SET REVIEWTITLE=#{reviewTitle}, REVIEWCONTENT=#{reviewContent}, 
		<if test="reviewFile != ''"><!-- 글작성할때는 null을 넣어도 되지만 수정할 때는 null로 덮어쓰면 안되니까! -->
			REVIEWFILE=#{reviewFile}, 
		</if>
		REVIEWIP=#{reviewIp}, REVIEWSCORE=#{reviewScore} WHERE REVIEWCODE=#{reviewCode}
	</update>
	
	<!-- 리뷰 삭제하는 쿼리 -->
	<delete id="deleteReview" parameterType="int">
		DELETE HOTEL_REVIEW WHERE REVIEWCODE=#{reviewCode}
	</delete>
</mapper>